// cards are 1-indexed in the javascript.  plus there is an extra td
// at the front of each row, so the first card for each player is
// actually the second child of the table row.

function removeCardAddCard (player,col,cardPath) {
  var index = col+1;
  var cardRow = $("#"+player+#{toJSON cardRowID});
  var card = cardRow.children("td:nth-child("+index+")");

  var colorRow = $("#"+player+#{toJSON colorRowID});
  var color = colorRow.children("td:nth-child("+index+")");

  var rankRow = $("#"+player+#{toJSON rankRowID});
  var rank = rankRow.children("td:nth-child("+index+")");

  var newcardtd = $('<td>').addClass("hidden").append($('<img>').attr("src",cardPath));
  var newcolortd = $('<td>').addClass("hidden").html("Mystery");
  var newranktd = $('<td>').addClass("hidden").html("Mystery");


  card.fadeOut('slow',function () {
    card.remove();
    cardRow.append(newcardtd);
    newcardtd.fadeIn('slow',function () {newcardtd.removeClass("hidden");});
  });
  color.fadeOut('slow',function () {
    color.remove();
    colorRow.append(newcolortd);
    newcolortd.fadeIn('slow',function () {newcolortd.removeClass("hidden");});
  });
  rank.fadeOut('slow',function () {
    rank.remove();
    rankRow.append(newranktd);
    newranktd.fadeIn('slow',function (){newranktd.removeClass("hidden");});
  });
}

function removeCard (player,col) {
  var index = col+1;
  var cardRow = $("#"+player+#{toJSON cardRowID});
  var card = cardRow.children("td:nth-child("+index+")");

  var colorRow = $("#"+player+#{toJSON colorRowID});
  var color = colorRow.children("td:nth-child("+index+")");

  var rankRow = $("#"+player+#{toJSON rankRowID});
  var rank = rankRow.children("td:nth-child("+index+")");

  card.fadeOut('slow',function () {card.remove()});
  color.fadeOut('slow',function () {color.remove()});
  rank.fadeOut('slow',function () {rank.remove()});
}

function getCard (player,col) {
  var index = col+1; // since there is an empty td at the front of the row
  return $("#"+player+"CardRow>td:nth-child("+index+")>img");
}

function displayMessage (msg) {
  return; // XXX
}

function sendDiscard (n) {
  console.debug(n);
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .removeAttr("onclick")
      .removeClass("clickable");
  }
  $.post("@{DiscardR}",{#{toJSON cardField}:n},
         function (data,s,j) {
           if (data.replacecard) {
             removeCardAddCard(#{toJSON mynum},n,"@{StaticR img_mystery_png}");
           } else {
             removeCard(#{toJSON mynum},n);
           };

           delete (data.replacecard);
           handleEvents (data);
         });
}

function makeDiscards () {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .attr("onclick","sendDiscard ("+i+")")
      .addClass("clickable");
  }
}

function handleEvents (events) {
  if ("discard" in events) {
    if ("newcard" in events.discard) {
      removeCardAddCard(events.discard.player,
                        events.discard.card,
                        events.discard.newcard);
    } else {
      removeCard(events.discard.player,
                 events.discard.card);
    }
  };

  if ("messages" in events) {
    for (var i=0; i < events.messages.length;  i++) {
      displayMessage(events.messages[i]);
    }
  };

  if ("replacecontent" in events) {
    var rc = events.replacecontent;
    for (var i=0; i < rc.length; i++) {
      $("#"+rc[i].replaceid).html(rc[i].replacedata);
    }
  }

    
}

var src = new EventSource("@{PlayerEventReceiveR mychan}");
src.onmessage = function(msg) {
  var event = JSON.parse(msg.data);
  console.debug(event);
  handleEvents(event);
}



