// cards are 1-indexed in the javascript.

function fadeInWithClass (elem) {
  elem.fadeIn('slow',function () {elem.removeClass("hidden");});
}

function removeCardAddCard (player,col,cardPath) {
  var cardRow = $("#"+player+#{toJSON cardRowID});
  var card = cardRow.children("td:nth-child("+col+")");

  var colorRow = $("#"+player+#{toJSON colorRowID});
  var color = colorRow.children("td:nth-child("+col+")");

  var rankRow = $("#"+player+#{toJSON rankRowID});
  var rank = rankRow.children("td:nth-child("+col+")");

  var newcardtd = $('<td>').addClass("hidden").append($('<img>').attr("src",cardPath));
  var newcolortd = $('<td>').addClass("hidden");
  var newranktd = $('<td>').addClass("hidden");


  card.fadeOut('slow',function () {
    card.remove();
    cardRow.append(newcardtd);
    fadeInWithClass(newcardtd);
  });
  color.fadeOut('slow',function () {
    color.remove();
    colorRow.append(newcolortd);
    fadeInWithClass(newcolortd);
  });
  rank.fadeOut('slow',function () {
    rank.remove();
    rankRow.append(newranktd);
    fadeInWithClass(newranktd);
  });
}

function removeCard (player,col) {
  var cardRow = $("#"+player+#{toJSON cardRowID});
  var card = cardRow.children("td:nth-child("+col+")");

  var colorRow = $("#"+player+#{toJSON colorRowID});
  var color = colorRow.children("td:nth-child("+col+")");

  var rankRow = $("#"+player+#{toJSON rankRowID});
  var rank = rankRow.children("td:nth-child("+col+")");

  card.fadeOut('slow',function () {card.remove()});
  color.fadeOut('slow',function () {color.remove()});
  rank.fadeOut('slow',function () {rank.remove()});
}

function getCard (player,col) {
  return $("#"+player+"CardRow>td:nth-child("+col+")>img");
}

function displayMessage (msg) {
  return; // XXX
}

function sendPlayDiscard (dest,n) {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .removeAttr("onclick")
      .removeClass("clickable");
  }
  $.post(dest,{#{toJSON cardField}:n},
         function (data,s,j) {
           handleEvents (data);
         });
}

function makeDiscards () {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .attr("onclick","sendPlayDiscard (\"@{DiscardR}\","+i+")")
      .addClass("clickable");
  }
}

function makePlays () {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .attr("onclick","sendPlayDiscard (\"@{PlayR}\","+i+")")
      .addClass("clickable");
  }
}

// These three functions make the individual hint buttons appear and work.
function sendColorHint(i,c) {
  $.post("@{ColorHintR}",{#{toJSON playerField}:i,
                          #{toJSON colorField}:c},
         function (data,s,j) {handleEvents(data)})
}

function makeColorHint(i,b) {
  var color = b.attr("data-cardcolor");
  b.attr("onclick","sendColorHint("+i+",\""+color+"\")");  
}

function makeRankHint(i,b) {
  var rank = b.attr("data-cardrank");
  var data = {#{toJSON playerField}:i
             ,#{toJSON rankField}:rank};
  b.attr("onclick","sendHint2(\"@{RankHintR}\","+data+")");  
}

function makeHintTypes(i) {
  $(".colorHintButton").each(function() {makeColorHint(i,$(this))});
  $(".rankHintButton").each(function() {makeRankHint(i,$(this))});
  fadeInWithClass($("#typeHintTextRow"));
  fadeInWithClass($("#colorHintButtonRow"));
  fadeInWithClass($("#rankHintButtonRow"));
}

// This sends a hint to the server
function sendHint2 (dest,data) {
  $.post(dest,data,
         function (data,s,j) {
           handleEvents (data);
         });
}



// makes the player names appear and work
function makeHintPeople () {
  $(".hintPlayerInfo").each(function() {fadeInWithClass($(this))});
}

function handleEvents (events) {
  console.debug(events);

  if ("discard" in events) {
    var dc = events.discard;
    if ("newcard" in dc) {
      removeCardAddCard(dc.player, dc.card, dc.newcard);
    } else {
      removeCard(dc.player, dc.card);
    }
  };

  if ("play" in events) {
    var p = events.play;
    if ("newcard" in p) {
      removeCardAddCard(p.player, p.card, p.newcard);
    } else {
      removeCard(p.player, p.card);
    }
  };

  if ("messages" in events) {
    for (var i=0; i < events.messages.length;  i++) {
      displayMessage(events.messages[i]);
    }
  };

  if ("replacecontent" in events) {
    var rc = events.replacecontent;
    for (var i=0; i < rc.length; i++) {
      $("#"+rc[i].replaceid).html(rc[i].replacedata);
    }
  }
}

var src = new EventSource("@{PlayerEventReceiveR mychan}");
src.onmessage = function(msg) {
  var event = JSON.parse(msg.data);
  handleEvents(event);
}

