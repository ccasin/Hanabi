// cards are 1-indexed in the javascript.

function removeCardAddCard (player,col,cardPath) {
  var cardRow = $("#"+player+#{toJSON cardRowID});
  var card = cardRow.children("td:nth-child("+col+")");

  var colorRow = $("#"+player+#{toJSON colorRowID});
  var color = colorRow.children("td:nth-child("+col+")");

  var rankRow = $("#"+player+#{toJSON rankRowID});
  var rank = rankRow.children("td:nth-child("+col+")");

  var newcardtd = $('<td>').attr("style","display:none;").append($('<img>').attr("src",cardPath));
  var newcolortd = $('<td>').attr("style","display:none;");
  var newranktd = $('<td>').attr("style","display:none;");


  card.fadeOut('slow',function () {
    card.remove();
    cardRow.append(newcardtd);
    newcardtd.fadeIn('slow');
  });
  color.fadeOut('slow',function () {
    color.remove();
    colorRow.append(newcolortd);
    newcolortd.fadeIn('slow');
  });
  rank.fadeOut('slow',function () {
    rank.remove();
    rankRow.append(newranktd);
    newranktd.fadeIn('slow');
  });
}

function removeCard (player,col) {
  var cardRow = $("#"+player+#{toJSON cardRowID});
  var card = cardRow.children("td:nth-child("+col+")");

  var colorRow = $("#"+player+#{toJSON colorRowID});
  var color = colorRow.children("td:nth-child("+col+")");

  var rankRow = $("#"+player+#{toJSON rankRowID});
  var rank = rankRow.children("td:nth-child("+col+")");

  card.fadeOut('slow',function () {card.remove()});
  color.fadeOut('slow',function () {color.remove()});
  rank.fadeOut('slow',function () {rank.remove()});
}

function getCard (player,col) {
  return $("#"+player+"CardRow>td:nth-child("+col+")>img");
}

function displayMessage (msg) {
  var msgp = $('<p>').addClass("nobottommargin").html(msg);
  var disp = $("#chatdisplay");
  disp.append(msgp);
  disp.prop("scrollTop",disp.prop("scrollHeight"));
}

function sendMessage (msg) {
  if (msg != "") {
     $("#chatinput").val("");
     $.post("@{ChatR}",{content:msg},
            function (data,s,j) {
              handleEvents (data);
            });
  }
}

function sendPlayDiscard (dest,n) {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .removeAttr("onclick")
      .removeClass("clickable");
  }
  $.post(dest,{#{toJSON cardField}:n},
         function (data,s,j) {
           handleEvents (data);
         });
}

function makeDiscards () {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .attr("onclick","sendPlayDiscard (\"@{DiscardR}\","+i+")")
      .addClass("clickable");
  }
}

function makePlays () {
  for (var i=1; i <= #{toJSON numCards}; i++) {
    getCard(#{toJSON mynum},i)
      .attr("onclick","sendPlayDiscard (\"@{PlayR}\","+i+")")
      .addClass("clickable");
  }
}

// These three functions make the individual hint buttons appear and work.
function sendColorHint(i,c) {
  $.post("@{ColorHintR}",{#{toJSON playerField}:i,
                          #{toJSON colorField}:c},
    function (data,s,j) {
      $(".hintPlayerInfo").fadeOut('slow');
      $("#typeHintTextRow").fadeOut('slow');
      $("#colorHintButtonRow").fadeOut('slow');
      $("#rankHintButtonRow").fadeOut('slow');
      handleEvents(data);
    })
}

function sendRankHint(i,c) {
  $.post("@{RankHintR}",{#{toJSON playerField}:i,
                         #{toJSON rankField}:c},
    function (data,s,j) {
      $(".hintPlayerInfo").fadeOut('slow');
      $("#typeHintTextRow").fadeOut('slow');
      $("#colorHintButtonRow").fadeOut('slow');
      $("#rankHintButtonRow").fadeOut('slow');
      handleEvents(data);
    })
}

function makeColorHint(i,b) {
  var color = b.attr("data-cardcolor");
  b.attr("onclick","sendColorHint("+i+",\'"+color+"\')");  
}

function makeRankHint(i,b) {
  var rank = b.attr("data-cardrank");
  b.attr("onclick","sendRankHint("+i+",\'"+rank+"\')");
}

function makeHintTypes(i) {
  $("button.colorHintButton").each(function() {makeColorHint(i,$(this))});
  $("button.rankHintButton").each(function() {makeRankHint(i,$(this))});
  $("#typeHintTextRow").fadeIn('slow');
  $("#colorHintButtonRow").fadeIn('slow');
  $("#rankHintButtonRow").fadeIn('slow');
}


// makes the player names appear and work
function makeHintPeople () {
  $(".hintPlayerInfo").fadeIn('slow');
}


// Whenever something happens in the game, the server sends an object
// filled with "events" to each player.  This function looks at all
// the received events and updates the view appropriately.
function handleEvents (events) {
  console.debug(events);

  // xxx handle GEError

  for (var ei=0; ei < events.length; ei++) {
    var event = events[ei];
    
    if ("GEHighlightPlayer" in event) {
      var hp = event.GEHighlightPlayer;
      for (var i=0; i < #{toJSON (length players)}; i++) {
        if (i == hp) {
          $("#player"+i).css("border-color","red");
        } else {
          $("#player"+i).css("border-color","black");
        }
      }
    }

    if ("GEUnhighlightPlayer" in event) {
      for (var i=0; i < #{toJSON (length players)}; i++) {
        $("#player"+i).css("border-color","black");
      }
    }
  
    if ("GEDiscard" in event) {
      var dc = event.GEDiscard;
      if (dc.NewCard != null) {
        removeCardAddCard(dc.Player, dc.Card, dc.NewCard);
      } else {
        removeCard(dc.Player, dc.Card);
      }
    };
  
    if ("GEPlay" in event) {
      var p = event.GEPlay;
      if (p.NewCard != null) {
        removeCardAddCard(p.Player, p.Card, p.NewCard);
      } else {
        removeCard(p.Player, p.Card);
      }
    };
  
    if ("GEMessages" in event) {
      var msgs = event.GEMessages;
      for (var i=0; i < msgs.length;  i++) {
        displayMessage(msgs[i]);
      }
    };
  
    if ("GEReplaceContent" in event) {
      var rc = event.GEReplaceContent;
      for (var i=0; i < rc.length; i++) {
        $("#"+rc[i].ReplaceId).html(rc[i].ReplaceData);
      }
    };
  
    if ("GEReplaceCards" in event) {
      var rc = event.GEReplaceCards;
      var player = rc.Player;
      var cardRow = $("#"+player+#{toJSON cardRowID});
      for (var i = 1; i <= rc.Cards.length; i++) {
        var card = cardRow.children("td:nth-child("+i+")");
        card.html(rc.Cards[(i-1)]);
      }
    }
  }
}

var src = new EventSource("@{PlayerEventReceiveR mychan}");
src.onmessage = function(msg) {
  var event = JSON.parse(msg.data);
  handleEvents(event);
}

